#
#   Copyright (C) 2014-2018 CASM Organization <https://casm-lang.org>
#   All rights reserved.
#
#   Developed by: Philipp Paulweber
#                 Emmanuel Pescosta
#                 <https://github.com/casm-lang/libstdhl>
#
#   This file is part of libstdhl.
#
#   libstdhl is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   libstdhl is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with libstdhl. If not, see <http://www.gnu.org/licenses/>.
#
#   Additional permission under GNU GPL version 3 section 7
#
#   libstdhl is distributed under the terms of the GNU General Public License
#   with the following clarification and special exception: Linking libstdhl
#   statically or dynamically with other modules is making a combined work
#   based on libstdhl. Thus, the terms and conditions of the GNU General
#   Public License cover the whole combination. As a special exception,
#   the copyright holders of libstdhl give you permission to link libstdhl
#   with independent modules to produce an executable, regardless of the
#   license terms of these independent modules, and to copy and distribute
#   the resulting executable under terms of your choice, provided that you
#   also meet, for each linked independent module, the terms and conditions
#   of the license of that module. An independent module is a module which
#   is not derived from or based on libstdhl. If you modify libstdhl, you
#   may extend this exception to your version of the library, but you are
#   not obliged to do so. If you do not wish to do so, delete this exception
#   statement from your version.
#

version: "{build}"

image: Visual Studio 2015

clone_script:
- cmd: |
    git clone -q --branch=%APPVEYOR_REPO_BRANCH% https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%
    cd %APPVEYOR_BUILD_FOLDER%
    git checkout -qf %APPVEYOR_REPO_COMMIT%
    git submodule update --init --remote

environment:
  matrix:

    - BUILD: debug
      G: "make-gw"
      C: gcc
      X: g++

    - BUILD: release
      G: "make-gw"
      C: gcc
      X: g++

    # - BUILD: debug
    #   G: "make-gw"
    #   C: clang
    #   X: clang++

    # - BUILD: release
    #   G: "make-gw"
    #   C: clang
    #   X: clang++
      
    # - BUILD: release
    #   ENV_T: "MinGW Makefiles"
    #   ENV_A: amd64
    #   ENV_CC: clang
    #   ENV_CXX: clang++

install:
  - set MINGW=C:\msys64\mingw64
  - copy %MINGW%\bin\mingw32-make.exe %MINGW%\bin\make.exe
  - set PATH=%MINGW%\bin;%PATH%
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmake --help
  - cmake --version
  - make --version
  - gcc --version
  - clang --version

build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - make G="%G%" C="%C%" X="%X%" %BUILD%

#   - if "%ENV_T%"=="MinGW Makefiles" (
#       
#     )
#     else (
#       md obj &&
#       cd obj &&
#       cmake .. -G"%ENV_T%" &&
#       msbuild /m /nologo /v:quiet /p:Configuration=%BUILD% %TARGET%.sln &&
#       dir
#     )

test_script:
  - make G="%G%" C="%C%" X="%X%" %BUILD%-test
